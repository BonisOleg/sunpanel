"""
–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –æ—á–∏—â–µ–Ω–Ω—è –≤—Å—ñ—Ö –∫–µ—à—ñ–≤ Django
"""
from django.core.management.base import BaseCommand
from django.core.cache import cache
import os

class Command(BaseCommand):
    help = '–û—á–∏—â–µ–Ω–Ω—è –≤—Å—ñ—Ö –∫–µ—à—ñ–≤ Django'

    def handle(self, *args, **options):
        self.stdout.write('üßπ –û—á–∏—â–µ–Ω–Ω—è –≤—Å—ñ—Ö –∫–µ—à—ñ–≤...')
        
        # –û—á–∏—Å—Ç–∏—Ç–∏ Django cache
        try:
            cache.clear()
            self.stdout.write('‚úÖ Django cache –æ—á–∏—â–µ–Ω–æ')
        except Exception as e:
            self.stdout.write(f'‚ùå –ü–æ–º–∏–ª–∫–∞ –æ—á–∏—â–µ–Ω–Ω—è Django cache: {e}')
        
        # –û—á–∏—Å—Ç–∏—Ç–∏ __pycache__ —Ñ–∞–π–ª–∏
        try:
            import subprocess
            result = subprocess.run(['find', '/opt/render/project/src', '-name', '__pycache__', '-type', 'd', '-exec', 'rm', '-rf', '{}', '+'], 
                                  capture_output=True, text=True)
            self.stdout.write('‚úÖ __pycache__ –æ—á–∏—â–µ–Ω–æ')
        except Exception as e:
            self.stdout.write(f'‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –æ—á–∏—Å—Ç–∏—Ç–∏ __pycache__: {e}')
        
        self.stdout.write(
            self.style.SUCCESS('üéâ –í—Å—ñ –∫–µ—à—ñ –æ—á–∏—â–µ–Ω–æ! –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç—ñ—Ç—å Gunicorn.')
        ) 