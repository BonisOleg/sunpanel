from django.core.management.base import BaseCommand
from django.db import transaction
from mainapp.models import Category, Product

class Command(BaseCommand):
    help = '–í–∏–¥–∞–ª—è—î —Ä–æ—Å—ñ–π—Å—å–∫—ñ –¥—É–±–ª—ñ–∫–∞—Ç–∏ –∫–∞—Ç–µ–≥–æ—Ä—ñ–π —Ç–∞ –ø–µ—Ä–µ–Ω–æ—Å–∏—Ç—å —Ç–æ–≤–∞—Ä–∏ –≤ —É–∫—Ä–∞—ó–Ω—Å—å–∫—ñ'

    def add_arguments(self, parser):
        parser.add_argument(
            '--dry-run',
            action='store_true',
            help='–ü–æ–∫–∞–∑–∞—Ç–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –±–µ–∑ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –≤ –±–∞–∑—É',
        )

    def handle(self, *args, **options):
        dry_run = options['dry_run']
        
        self.stdout.write("üîç –ü–æ—à—É–∫ –¥—É–±–ª—ñ–∫–∞—Ç—ñ–≤ –∫–∞—Ç–µ–≥–æ—Ä—ñ–π...")
        
        # –†–æ—Å—ñ–π—Å—å–∫—ñ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó, —è–∫—ñ –ø–æ—Ç—Ä—ñ–±–Ω–æ –≤–∏–¥–∞–ª–∏—Ç–∏ —ñ —ó—Ö —É–∫—Ä–∞—ó–Ω—Å—å–∫—ñ –∞–Ω–∞–ª–æ–≥–∏
        russian_to_ukrainian = {
            '–ê–∫–∫—É–º—É–ª—è—Ç–æ—Ä—ã –¥–ª—è –ò–ë–ü Deye': '–ê–∫—É–º—É–ª—è—Ç–æ—Ä–∏ –¥–ª—è –î–ë–ñ Deye',
            '–ê–∫–∫—É–º—É–ª—è—Ç–æ—Ä—ã –¥–ª—è –ò–ë–ü MUST': '–ê–∫—É–º—É–ª—è—Ç–æ—Ä–∏ –¥–ª—è –î–ë–ñ MUST', 
            '–ê–∫–∫—É–º—É–ª—è—Ç–æ—Ä—ã –¥–ª—è –ò–ë–ü lvtopsun': '–ê–∫—É–º—É–ª—è—Ç–æ—Ä–∏ –¥–ª—è –î–ë–ñ lvtopsun',
            '–ò–Ω–≤–µ—Ä—Ç–æ—Ä—ã Deye': '–Ü–Ω–≤–µ—Ä—Ç–æ—Ä–∏ Deye',
            '–ò–Ω–≤–µ—Ä—Ç–æ—Ä—ã Must': '–Ü–Ω–≤–µ—Ä—Ç–æ—Ä–∏ Must',
            '–°–æ–ª–Ω–µ—á–Ω—ã–µ –ø–∞–Ω–µ–ª–∏ Longi Solar': '–°–æ–Ω—è—á–Ω—ñ –ø–∞–Ω–µ–ª—ñ Longi Solar',
            '–°–æ–ª–Ω–µ—á–Ω—ã–µ –ø–∞–Ω–µ–ª–∏ Risen Energy': '–°–æ–Ω—è—á–Ω—ñ –ø–∞–Ω–µ–ª—ñ Risen Energy',
            '–î–æ–ø–æ–ª–Ω–∏–µ–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏': '–î–æ–¥–∞—Ç–∫–æ–≤—ñ –ø–æ—Å–ª—É–≥–∏'
        }
        
        moved_products = 0
        deleted_categories = 0
        
        for russian_name, ukrainian_name in russian_to_ukrainian.items():
            try:
                russian_category = Category.objects.get(name=russian_name)
                ukrainian_category = Category.objects.get(name=ukrainian_name)
                
                self.stdout.write(f"\nüîÑ –û–±—Ä–æ–±–∫–∞: {russian_name} ‚Üí {ukrainian_name}")
                
                # –ü–µ—Ä–µ–Ω–æ—Å–∏–º–æ —Ç–æ–≤–∞—Ä–∏ –∑ —Ä–æ—Å—ñ–π—Å—å–∫–æ—ó –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó –≤ —É–∫—Ä–∞—ó–Ω—Å—å–∫—É
                products_to_move = Product.objects.filter(category=russian_category)
                product_count = products_to_move.count()
                
                if product_count > 0:
                    self.stdout.write(f"   üì¶ –¢–æ–≤–∞—Ä—ñ–≤ –¥–ª—è –ø–µ—Ä–µ–Ω–æ—Å—É: {product_count}")
                    
                    if not dry_run:
                        with transaction.atomic():
                            products_to_move.update(category=ukrainian_category)
                            moved_products += product_count
                            self.stdout.write(f"   ‚úÖ –ü–µ—Ä–µ–Ω–µ—Å–µ–Ω–æ {product_count} —Ç–æ–≤–∞—Ä—ñ–≤")
                    else:
                        self.stdout.write(f"   üîç –ë–£–î–ï –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω–æ {product_count} —Ç–æ–≤–∞—Ä—ñ–≤")
                        for product in products_to_move[:5]:  # –ü–æ–∫–∞–∑—É—î–º–æ –ø–µ—Ä—à—ñ 5
                            self.stdout.write(f"      - {product.name}")
                        if product_count > 5:
                            self.stdout.write(f"      ... —Ç–∞ —â–µ {product_count - 5}")
                
                # –í–∏–¥–∞–ª—è—î–º–æ —Ä–æ—Å—ñ–π—Å—å–∫—É –∫–∞—Ç–µ–≥–æ—Ä—ñ—é
                if not dry_run:
                    russian_category.delete()
                    deleted_categories += 1
                    self.stdout.write(f"   üóëÔ∏è –í–∏–¥–∞–ª–µ–Ω–æ —Ä–æ—Å—ñ–π—Å—å–∫—É –∫–∞—Ç–µ–≥–æ—Ä—ñ—é")
                else:
                    self.stdout.write(f"   üîç –ë–£–î–ï –≤–∏–¥–∞–ª–µ–Ω–∞ —Ä–æ—Å—ñ–π—Å—å–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä—ñ—è")
                    
            except Category.DoesNotExist as e:
                if russian_name in str(e):
                    self.stdout.write(f"‚ö†Ô∏è –†–æ—Å—ñ–π—Å—å–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä—ñ—è '{russian_name}' –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞")
                elif ukrainian_name in str(e):
                    self.stdout.write(f"‚ö†Ô∏è –£–∫—Ä–∞—ó–Ω—Å—å–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä—ñ—è '{ukrainian_name}' –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞")
                continue
            except Exception as e:
                self.stdout.write(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ–±—Ä–æ–±—Ü—ñ '{russian_name}': {str(e)}")
                continue
        
        # –ü—ñ–¥—Å—É–º–∫–∏
        if dry_run:
            self.stdout.write(
                self.style.WARNING(
                    f"\nüìã –ü–û–ü–ï–†–ï–î–ù–Ü–ô –ü–ï–†–ï–ì–õ–Ø–î\n"
                    f"–ë—É–¥–µ –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω–æ —Ç–æ–≤–∞—Ä—ñ–≤: {moved_products}\n"
                    f"–ë—É–¥–µ –≤–∏–¥–∞–ª–µ–Ω–æ –∫–∞—Ç–µ–≥–æ—Ä—ñ–π: {deleted_categories}\n"
                    f"–î–ª—è –∑–∞—Å—Ç–æ—Å—É–≤–∞–Ω–Ω—è –∑–º—ñ–Ω –∑–∞–ø—É—Å—Ç—ñ—Ç—å –±–µ–∑ --dry-run"
                )
            )
        else:
            self.stdout.write(
                self.style.SUCCESS(
                    f"\nüéâ –û–ß–ò–©–ï–ù–ù–Ø –ó–ê–í–ï–†–®–ï–ù–û\n"
                    f"–ü–µ—Ä–µ–Ω–µ—Å–µ–Ω–æ —Ç–æ–≤–∞—Ä—ñ–≤: {moved_products}\n"
                    f"–í–∏–¥–∞–ª–µ–Ω–æ —Ä–æ—Å—ñ–π—Å—å–∫–∏—Ö –∫–∞—Ç–µ–≥–æ—Ä—ñ–π: {deleted_categories}"
                )
            )
            
        # –ü–æ–∫–∞–∑—É—î–º–æ –ø–æ—Ç–æ—á–Ω–∏–π —Å–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä—ñ–π
        self.stdout.write(f"\nüìÇ –ü–æ—Ç–æ—á–Ω—ñ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó:")
        for category in Category.objects.all().order_by('name'):
            product_count = Product.objects.filter(category=category).count()
            self.stdout.write(f"   {category.id}: {category.name} ({product_count} —Ç–æ–≤–∞—Ä—ñ–≤)") 