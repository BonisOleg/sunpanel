"""
–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –º–µ–¥—ñ–∞ —Ñ–∞–π–ª—ñ–≤ –≤ production
–ö–æ–ø—ñ—é—î –≤—Å—ñ –º–µ–¥—ñ–∞ —Ñ–∞–π–ª–∏ –¥–æ staticfiles/media/ –¥–ª—è –æ–±—Å–ª—É–≥–æ–≤—É–≤–∞–Ω–Ω—è —á–µ—Ä–µ–∑ WhiteNoise
–û–ø—Ç–∏–º—ñ–∑–æ–≤–∞–Ω–æ –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ—ó —Ä–æ–±–æ—Ç–∏ –∑ —Ç–æ–≤–∞—Ä–∞–º–∏ –Ω–∞ Render
"""
import os
import shutil
from django.core.management.base import BaseCommand
from django.conf import settings
from mainapp.models import Product, ProductImage


class Command(BaseCommand):
    help = '–ù–∞–ª–∞—à—Ç–æ–≤—É—î –º–µ–¥—ñ–∞ —Ñ–∞–π–ª–∏ –¥–ª—è production (–∫–æ–ø—ñ—é—î –¥–æ staticfiles)'

    def add_arguments(self, parser):
        parser.add_argument(
            '--clean',
            action='store_true',
            help='–û—á–∏—Å—Ç–∏—Ç–∏ —ñ—Å–Ω—É—é—á—ñ –º–µ–¥—ñ–∞ —Ñ–∞–π–ª–∏ –≤ staticfiles'
        )
        parser.add_argument(
            '--verify',
            action='store_true',
            help='–ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ —â–æ –≤—Å—ñ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è —Ç–æ–≤–∞—Ä—ñ–≤ –¥–æ—Å—Ç—É–ø–Ω—ñ'
        )

    def handle(self, *args, **options):
        self.stdout.write('üöÄ –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –º–µ–¥—ñ–∞ —Ñ–∞–π–ª—ñ–≤ –¥–ª—è production...')
        
        # –®–ª—è—Ö–∏
        media_source = os.path.join(settings.BASE_DIR, 'media')  
        staticfiles_root = getattr(settings, 'STATIC_ROOT', os.path.join(settings.BASE_DIR, 'staticfiles'))
        static_media_dest = os.path.join(staticfiles_root, 'media')
        
        # –°—Ç–≤–æ—Ä—é—î–º–æ staticfiles —è–∫—â–æ –Ω–µ —ñ—Å–Ω—É—î
        os.makedirs(staticfiles_root, exist_ok=True)
        
        # –û—á–∏—â–µ–Ω–Ω—è —è–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ
        if options['clean'] and os.path.exists(static_media_dest):
            shutil.rmtree(static_media_dest)
            self.stdout.write('üóëÔ∏è –û—á–∏—â–µ–Ω–æ —ñ—Å–Ω—É—é—á—ñ –º–µ–¥—ñ–∞ —Ñ–∞–π–ª–∏ –≤ staticfiles')

        # –°—Ç–≤–æ—Ä—é—î–º–æ —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø–∞–ø–æ–∫
        os.makedirs(static_media_dest, exist_ok=True)
        os.makedirs(os.path.join(static_media_dest, 'products'), exist_ok=True)
        os.makedirs(os.path.join(static_media_dest, 'products', 'gallery'), exist_ok=True)
        os.makedirs(os.path.join(static_media_dest, 'portfolio'), exist_ok=True)
        os.makedirs(os.path.join(static_media_dest, 'brands'), exist_ok=True)
        
        if not os.path.exists(media_source):
            self.stdout.write(
                self.style.WARNING('‚ö†Ô∏è –ü–∞–ø–∫–∞ media –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞! –°—Ç–≤–æ—Ä—é—é –ø–æ—Ä–æ–∂–Ω—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É...')
            )
            return

        # –ö–æ–ø—ñ—é—î–º–æ –≤—Å—ñ –º–µ–¥—ñ–∞ —Ñ–∞–π–ª–∏ –∑—ñ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è–º —Å—Ç—Ä—É–∫—Ç—É—Ä–∏
        copied_files = 0
        for root, dirs, files in os.walk(media_source):
            for file in files:
                source_file = os.path.join(root, file)
                
                # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –≤—ñ–¥–Ω–æ—Å–Ω–∏–π —à–ª—è—Ö –≤—ñ–¥ media –ø–∞–ø–∫–∏
                rel_path = os.path.relpath(source_file, media_source)
                dest_file = os.path.join(static_media_dest, rel_path)
                
                # –°—Ç–≤–æ—Ä—é—î–º–æ –ø–∞–ø–∫–∏ —è–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ
                os.makedirs(os.path.dirname(dest_file), exist_ok=True)
                
                # –ö–æ–ø—ñ—é—î–º–æ —Ñ–∞–π–ª
                try:
                    shutil.copy2(source_file, dest_file)
                    copied_files += 1
                    
                    if file.lower().endswith(('.jpg', '.jpeg', '.png', '.gif', '.webp')):
                        self.stdout.write(f'‚úÖ üñºÔ∏è {rel_path}')
                    else:
                        self.stdout.write(f'‚úÖ üìÑ {rel_path}')
                        
                except Exception as e:
                    self.stdout.write(
                        self.style.WARNING(f'‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –∫–æ–ø—ñ—é–≤–∞–Ω–Ω—è {rel_path}: {e}')
                    )

        self.stdout.write(
            self.style.SUCCESS(
                f'üìÅ –°–∫–æ–ø—ñ–π–æ–≤–∞–Ω–æ {copied_files} –º–µ–¥—ñ–∞ —Ñ–∞–π–ª—ñ–≤ –¥–æ staticfiles/media/'
            )
        )
        
        # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —â–æ –≤—Å—ñ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è —Ç–æ–≤–∞—Ä—ñ–≤ –¥–æ—Å—Ç—É–ø–Ω—ñ
        if options['verify']:
            self.verify_product_images(static_media_dest)
        
        self.stdout.write(
            self.style.SUCCESS(
                'üéâ –ú–µ–¥—ñ–∞ —Ñ–∞–π–ª–∏ –≥–æ—Ç–æ–≤—ñ –¥–ª—è production!\n'
                '–¢–µ–ø–µ—Ä –≤—Å—ñ –º–µ–¥—ñ–∞ —Ñ–∞–π–ª–∏ –¥–æ—Å—Ç—É–ø–Ω—ñ —á–µ—Ä–µ–∑ /static/media/ URL'
            )
        )

    def verify_product_images(self, static_media_dest):
        """–ü–µ—Ä–µ–≤—ñ—Ä—è—î —â–æ –≤—Å—ñ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è —Ç–æ–≤–∞—Ä—ñ–≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ —Å–∫–æ–ø—ñ–π–æ–≤–∞–Ω—ñ"""
        self.stdout.write('\nüîç –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—ñ –∑–æ–±—Ä–∞–∂–µ–Ω—å —Ç–æ–≤–∞—Ä—ñ–≤...')
        
        missing_count = 0
        available_count = 0
        
        # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –≥–æ–ª–æ–≤–Ω—ñ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è —Ç–æ–≤–∞—Ä—ñ–≤
        for product in Product.objects.all():
            if product.image:
                # –û—á—ñ–∫—É–≤–∞–Ω–∏–π —à–ª—è—Ö –≤ staticfiles
                expected_path = os.path.join(static_media_dest, str(product.image.name))
                
                if os.path.exists(expected_path):
                    available_count += 1
                    if available_count <= 3:  # –ü–æ–∫–∞–∑—É—î–º–æ –ø–µ—Ä—à—ñ 3
                        self.stdout.write(f'   ‚úÖ {product.name[:40]}... ‚Üí {product.image.name}')
                else:
                    missing_count += 1
                    if missing_count <= 3:  # –ü–æ–∫–∞–∑—É—î–º–æ –ø–µ—Ä—à—ñ 3 –ø—Ä–æ–±–ª–µ–º–Ω—ñ
                        self.stdout.write(f'   ‚ùå {product.name[:40]}... ‚Üí {product.image.name}')
        
        # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –¥–æ–¥–∞—Ç–∫–æ–≤—ñ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è
        gallery_missing = 0
        gallery_available = 0
        
        for image in ProductImage.objects.all():
            if image.image:
                expected_path = os.path.join(static_media_dest, str(image.image.name))
                
                if os.path.exists(expected_path):
                    gallery_available += 1
                else:
                    gallery_missing += 1
        
        # –ü—ñ–¥—Å—É–º–æ–∫
        self.stdout.write(f'\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç–∏ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏:')
        self.stdout.write(f'   üñºÔ∏è –ì–æ–ª–æ–≤–Ω—ñ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è: {available_count} –¥–æ—Å—Ç—É–ø–Ω—ñ, {missing_count} –≤—ñ–¥—Å—É—Ç–Ω—ñ')
        self.stdout.write(f'   üñºÔ∏è –î–æ–¥–∞—Ç–∫–æ–≤—ñ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è: {gallery_available} –¥–æ—Å—Ç—É–ø–Ω—ñ, {gallery_missing} –≤—ñ–¥—Å—É—Ç–Ω—ñ')
        
        if missing_count > 0 or gallery_missing > 0:
            self.stdout.write(
                self.style.WARNING(
                    f'‚ö†Ô∏è –í—Å—å–æ–≥–æ –≤—ñ–¥—Å—É—Ç–Ω—ñ—Ö –∑–æ–±—Ä–∞–∂–µ–Ω—å: {missing_count + gallery_missing}\n'
                    '–ó–∞–ø—É—Å—Ç—ñ—Ç—å –∫–æ–º–∞–Ω–¥—É universal_import_products –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è'
                )
            )
        else:
            self.stdout.write(
                self.style.SUCCESS('‚úÖ –í—Å—ñ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è —Ç–æ–≤–∞—Ä—ñ–≤ –¥–æ—Å—Ç—É–ø–Ω—ñ!')
            ) 