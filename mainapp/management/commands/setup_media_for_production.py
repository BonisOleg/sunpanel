"""
–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –º–µ–¥—ñ–∞ —Ñ–∞–π–ª—ñ–≤ –≤ production
–ö–æ–ø—ñ—é—î –≤—Å—ñ –º–µ–¥—ñ–∞ —Ñ–∞–π–ª–∏ –¥–æ staticfiles/media/ –¥–ª—è –æ–±—Å–ª—É–≥–æ–≤—É–≤–∞–Ω–Ω—è —á–µ—Ä–µ–∑ WhiteNoise
"""
import os
import shutil
from django.core.management.base import BaseCommand
from django.conf import settings
from django.contrib.staticfiles.management.commands.collectstatic import Command as CollectStaticCommand


class Command(BaseCommand):
    help = '–ù–∞–ª–∞—à—Ç–æ–≤—É—î –º–µ–¥—ñ–∞ —Ñ–∞–π–ª–∏ –¥–ª—è production (–∫–æ–ø—ñ—é—î –¥–æ staticfiles)'

    def add_arguments(self, parser):
        parser.add_argument(
            '--clean',
            action='store_true',
            help='–û—á–∏—Å—Ç–∏—Ç–∏ —ñ—Å–Ω—É—é—á—ñ –º–µ–¥—ñ–∞ —Ñ–∞–π–ª–∏ –≤ staticfiles'
        )

    def handle(self, *args, **options):
        self.stdout.write('üöÄ –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –º–µ–¥—ñ–∞ —Ñ–∞–π–ª—ñ–≤ –¥–ª—è production...')
        
        # –®–ª—è—Ö–∏
        media_source = os.path.join(settings.BASE_DIR, 'media')  # –í–∏—Ö—ñ–¥–Ω–∞ –ø–∞–ø–∫–∞ media
        staticfiles_root = settings.STATIC_ROOT
        static_media_dest = os.path.join(staticfiles_root, 'media')
        
        # –°—Ç–≤–æ—Ä—é—î–º–æ staticfiles —è–∫—â–æ –Ω–µ —ñ—Å–Ω—É—î
        os.makedirs(staticfiles_root, exist_ok=True)
        
        # –û—á–∏—â–µ–Ω–Ω—è —è–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ
        if options['clean'] and os.path.exists(static_media_dest):
            shutil.rmtree(static_media_dest)
            self.stdout.write('üóëÔ∏è –û—á–∏—â–µ–Ω–æ —ñ—Å–Ω—É—é—á—ñ –º–µ–¥—ñ–∞ —Ñ–∞–π–ª–∏ –≤ staticfiles')

        # –°—Ç–≤–æ—Ä—é—î–º–æ –ø–∞–ø–∫—É –º–µ–¥—ñ–∞ –≤ staticfiles
        os.makedirs(static_media_dest, exist_ok=True)
        
        if not os.path.exists(media_source):
            self.stdout.write(
                self.style.WARNING('‚ö†Ô∏è –ü–∞–ø–∫–∞ media –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞! –°—Ç–≤–æ—Ä—é—é –ø–æ—Ä–æ–∂–Ω—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É...')
            )
            # –°—Ç–≤–æ—Ä—é—î–º–æ –±–∞–∑–æ–≤—É —Å—Ç—Ä—É–∫—Ç—É—Ä—É
            os.makedirs(os.path.join(static_media_dest, 'products'), exist_ok=True)
            os.makedirs(os.path.join(static_media_dest, 'portfolio'), exist_ok=True)
            os.makedirs(os.path.join(static_media_dest, 'brands'), exist_ok=True)
            return

        # –ö–æ–ø—ñ—é—î–º–æ –≤—Å—ñ –º–µ–¥—ñ–∞ —Ñ–∞–π–ª–∏
        copied_files = 0
        for root, dirs, files in os.walk(media_source):
            for file in files:
                # –ö–æ–ø—ñ—é—î–º–æ –≤—Å—ñ —Ñ–∞–π–ª–∏ (–Ω–µ –ª–∏—à–µ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è)
                source_file = os.path.join(root, file)
                
                # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø–∞–ø–æ–∫
                rel_path = os.path.relpath(source_file, media_source)
                dest_file = os.path.join(static_media_dest, rel_path)
                
                # –°—Ç–≤–æ—Ä—é—î–º–æ –ø–∞–ø–∫–∏ —è–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ
                os.makedirs(os.path.dirname(dest_file), exist_ok=True)
                
                # –ö–æ–ø—ñ—é—î–º–æ —Ñ–∞–π–ª
                try:
                    shutil.copy2(source_file, dest_file)
                    copied_files += 1
                    
                    if file.lower().endswith(('.jpg', '.jpeg', '.png', '.gif', '.webp')):
                        self.stdout.write(f'‚úÖ üñºÔ∏è {rel_path}')
                    else:
                        self.stdout.write(f'‚úÖ üìÑ {rel_path}')
                        
                except Exception as e:
                    self.stdout.write(
                        self.style.WARNING(f'‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –∫–æ–ø—ñ—é–≤–∞–Ω–Ω—è {rel_path}: {e}')
                    )

        self.stdout.write(
            self.style.SUCCESS(
                f'üìÅ –°–∫–æ–ø—ñ–π–æ–≤–∞–Ω–æ {copied_files} –º–µ–¥—ñ–∞ —Ñ–∞–π–ª—ñ–≤ –¥–æ staticfiles/media/'
            )
        )
        
        # –ó–∞–ø—É—Å–∫–∞—î–º–æ collectstatic –¥–ª—è –∑–±–∏—Ä–∞–Ω–Ω—è –≤—Å—ñ—Ö —Å—Ç–∞—Ç–∏—á–Ω–∏—Ö —Ñ–∞–π–ª—ñ–≤
        self.stdout.write('üì¶ –ó–∞–ø—É—Å–∫–∞—é collectstatic...')
        try:
            collect_command = CollectStaticCommand()
            collect_command.handle(interactive=False, verbosity=0)
            self.stdout.write(self.style.SUCCESS('‚úÖ Collectstatic –∑–∞–≤–µ—Ä—à–µ–Ω–æ'))
        except Exception as e:
            self.stdout.write(
                self.style.WARNING(f'‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ collectstatic: {e}')
            )
        
        self.stdout.write(
            self.style.SUCCESS(
                'üéâ –ú–µ–¥—ñ–∞ —Ñ–∞–π–ª–∏ –≥–æ—Ç–æ–≤—ñ –¥–ª—è production!\n'
                '–¢–µ–ø–µ—Ä –≤—Å—ñ –º–µ–¥—ñ–∞ —Ñ–∞–π–ª–∏ –¥–æ—Å—Ç—É–ø–Ω—ñ —á–µ—Ä–µ–∑ /static/media/ URL'
            )
        ) 