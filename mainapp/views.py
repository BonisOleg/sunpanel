from django.shortcuts import render
from django.views.generic import TemplateView
from django.http import HttpResponse
from .models import Product, Portfolio, Review
from django.db.models import Q, Avg
from django.db import models


class IndexView(TemplateView):
    template_name = 'mainapp/index.html'
    
    def get_context_data(self, **kwargs):
        context = super().get_context_data(**kwargs)
        context.update({
            'title': 'GreenSolarTech ‚Äî –°–æ–Ω—è—á–Ω—ñ –µ–ª–µ–∫—Ç—Ä–æ—Å—Ç–∞–Ω—Ü—ñ—ó –≤ –£–∫—Ä–∞—ó–Ω—ñ',
            'description': '–ü—Ä–æ–µ–∫—Ç—É–≤–∞–Ω–Ω—è —Ç–∞ –±—É–¥—ñ–≤–Ω–∏—Ü—Ç–≤–æ —Å–æ–Ω—è—á–Ω–∏—Ö –µ–ª–µ–∫—Ç—Ä–æ—Å—Ç–∞–Ω—Ü—ñ–π –ø—ñ–¥ –∫–ª—é—á. –ü–æ–Ω–∞–¥ 50 –ú–í—Ç –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—Ö –ø–æ—Ç—É–∂–Ω–æ—Å—Ç–µ–π. –ó–µ–ª–µ–Ω–∏–π —Ç–∞—Ä–∏—Ñ —Ç–∞ –µ–Ω–µ—Ä–≥–æ–Ω–µ–∑–∞–ª–µ–∂–Ω—ñ—Å—Ç—å.',
            'keywords': '—Å–æ–Ω—è—á–Ω—ñ –µ–ª–µ–∫—Ç—Ä–æ—Å—Ç–∞–Ω—Ü—ñ—ó, —Å–æ–Ω—è—á–Ω—ñ –ø–∞–Ω–µ–ª—ñ, GreenSolarTech, –ö–∏—ó–≤, –∑–µ–ª–µ–Ω–∏–π —Ç–∞—Ä–∏—Ñ, –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∞ –µ–Ω–µ—Ä–≥–µ—Ç–∏–∫–∞',
            'company_info': {
                'name': 'GreenSolarTech',
                'phones': ['+380500344881', '+380634952145'],
                'address': '–ö–∏—ó–≤—Å—å–∫–∞ –æ–±–ª–∞—Å—Ç—å, –º. –ö–∏—ó–≤, –£–∫—Ä–∞—ó–Ω–∞',
                'production_capacity': 50,  # –ú–í—Ç –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ
                'storage_area': 105,  # –ø—Ä–∏–≤–∞—Ç–Ω–∏—Ö –°–ï–°
                'stock_capacity': 22,  # –∫–æ–º–µ—Ä—Ü—ñ–π–Ω–∏—Ö –°–ï–°
            },
            'panel_types': [
                {
                    'name': '–ú–æ–Ω–æ–∫—Ä–∏—Å—Ç–∞–ª—ñ—á–Ω—ñ',
                    'power': '540-700 –í—Ç',
                    'efficiency': '–¥–æ 22%',
                    'warranty': '25 —Ä–æ–∫—ñ–≤',
                    'features': ['–ù–∞–π–≤–∏—â–∞ —è–∫—ñ—Å—Ç—å', '–ú–∞–∫—Å–∏–º—É–º –µ–Ω–µ—Ä–≥—ñ—ó', '–ù–∞–¥—ñ–π–Ω—ñ—Å—Ç—å']
                },
                {
                    'name': '–ü–æ–ª—ñ–∫—Ä–∏—Å—Ç–∞–ª—ñ—á–Ω—ñ', 
                    'power': '440-550 –í—Ç',
                    'efficiency': '–¥–æ 20%',
                    'warranty': '20-25 —Ä–æ–∫—ñ–≤',
                    'features': ['–í—ñ–¥–º—ñ–Ω–Ω–∞ —è–∫—ñ—Å—Ç—å', '–ï–∫–æ–Ω–æ–º—ñ—á–Ω–æ', '–°—Ç–∞–±—ñ–ª—å–Ω–∞ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—è']
                }
            ],
            'advantages': [
                {
                    'icon': 'üí∞',
                    'title': '–ï–∫–æ–Ω–æ–º—ñ—á–Ω–æ',
                    'description': '–û–∫—É–ø–Ω—ñ—Å—Ç—å –∑–∞ 5-7 —Ä–æ–∫—ñ–≤. –ó–µ–ª–µ–Ω–∏–π —Ç–∞—Ä–∏—Ñ –¥–ª—è –ø—Ä–æ–¥–∞–∂—É –µ–ª–µ–∫—Ç—Ä–æ–µ–Ω–µ—Ä–≥—ñ—ó.',
                },
                {
                    'icon': '‚ö°',
                    'title': '–ï–Ω–µ—Ä–≥–æ–Ω–µ–∑–∞–ª–µ–∂–Ω—ñ—Å—Ç—å',
                    'description': '–í–ª–∞—Å–Ω–∞ –µ–ª–µ–∫—Ç—Ä–æ–µ–Ω–µ—Ä–≥—ñ—è —Ü—ñ–ª–æ–¥–æ–±–æ–≤–æ. –†–µ–∑–µ—Ä–≤–Ω–µ –∂–∏–≤–ª–µ–Ω–Ω—è –ø—Ä–∏ –≤—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è—Ö.',
                },
                {
                    'icon': 'üå±',
                    'title': '–ï–∫–æ–ª–æ–≥—ñ—á–Ω–æ',
                    'description': '100% —á–∏—Å—Ç–∞ –µ–Ω–µ—Ä–≥—ñ—è —Å–æ–Ω—Ü—è. –ó–Ω–∏–∂–µ–Ω–Ω—è –≤–∏–∫–∏–¥—ñ–≤ CO‚ÇÇ.',
                }
            ],
            'project_stages': [
                {'step': 1, 'title': '–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—è', 'description': '–ë–µ–∑–∫–æ—à—Ç–æ–≤–Ω–∏–π –≤–∏—ó–∑–¥ —ñ–Ω–∂–µ–Ω–µ—Ä–∞'},
                {'step': 2, 'title': '–ü—Ä–æ–µ–∫—Ç—É–≤–∞–Ω–Ω—è', 'description': '–†–æ–∑—Ä–æ–±–∫–∞ —ñ–Ω–¥–∏–≤—ñ–¥—É–∞–ª—å–Ω–æ–≥–æ –ø—Ä–æ—î–∫—Ç—É'},
                {'step': 3, 'title': '–£–∑–≥–æ–¥–∂–µ–Ω–Ω—è', 'description': '–û—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–æ–∑–≤–æ–ª—ñ–≤ —Ç–∞ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è'},
                {'step': 4, 'title': '–ü–æ—Å—Ç–∞—á–∞–Ω–Ω—è', 'description': '–î–æ—Å—Ç–∞–≤–∫–∞ –æ–±–ª–∞–¥–Ω–∞–Ω–Ω—è –Ω–∞ –æ–±\'—î–∫—Ç'},
                {'step': 5, 'title': '–ú–æ–Ω—Ç–∞–∂', 'description': '–ü—Ä–æ—Ñ–µ—Å—ñ–π–Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–∞–Ω—Ü—ñ—ó'},
                {'step': 6, 'title': '–ü—É—Å–∫–æ-–Ω–∞–ª–∞–≥–æ–¥–∂–µ–Ω–Ω—è', 'description': '–¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è —Ç–∞ –≤–≤–µ–¥–µ–Ω–Ω—è –≤ –µ–∫—Å–ø–ª—É–∞—Ç–∞—Ü—ñ—é'},
                {'step': 7, 'title': '–°–µ—Ä–≤—ñ—Å', 'description': '–ì–∞—Ä–∞–Ω—Ç—ñ–π–Ω–µ —Ç–∞ –ø—ñ—Å–ª—è–≥–∞—Ä–∞–Ω—Ç—ñ–π–Ω–µ –æ–±—Å–ª—É–≥–æ–≤—É–≤–∞–Ω–Ω—è'},
            ],
            'energy_comparison': [
                {
                    'fuel': '–°–æ–Ω—è—á–Ω–∞ –µ–Ω–µ—Ä–≥—ñ—è',
                    'heat_value': '0.05-0.15 ‚Ç¨/–∫–í—Ç¬∑–≥–æ–¥',
                    'ash': '0 –≥/–∫–í—Ç¬∑–≥–æ–¥',
                    'co2': '100% –≤—ñ–¥–Ω–æ–≤–ª—é–≤–∞–Ω–∞',
                    'sulfur': '–ü–æ–≤–Ω–∞',
                    'highlight': True
                },
                {
                    'fuel': '–ú–µ—Ä–µ–∂–µ–≤–∞ –µ–ª–µ–∫—Ç—Ä–æ–µ–Ω–µ—Ä–≥—ñ—è',
                    'heat_value': '0.20-0.30 ‚Ç¨/–∫–í—Ç¬∑–≥–æ–¥', 
                    'ash': '400-800 –≥/–∫–í—Ç¬∑–≥–æ–¥',
                    'co2': '–ß–∞—Å—Ç–∫–æ–≤–æ',
                    'sulfur': '–û–±–º–µ–∂–µ–Ω–∞',
                    'highlight': False
                },
                {
                    'fuel': '–î–∏–∑–µ–ª—å-–≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä',
                    'heat_value': '0.40-0.60 ‚Ç¨/–∫–í—Ç¬∑–≥–æ–¥',
                    'ash': '1200 –≥/–∫–í—Ç¬∑–≥–æ–¥',
                    'co2': '–ù—ñ',
                    'sulfur': '–í—ñ–¥—Å—É—Ç–Ω—è',
                    'highlight': False
                },
                {
                    'fuel': '–ü—Ä–∏—Ä–æ–¥–Ω–∏–π –≥–∞–∑',
                    'heat_value': '0.25-0.35 ‚Ç¨/–∫–í—Ç¬∑–≥–æ–¥',
                    'ash': '600 –≥/–∫–í—Ç¬∑–≥–æ–¥',
                    'co2': '–ù—ñ',
                    'sulfur': '–ó–∞–ª–µ–∂–Ω–∞',
                    'highlight': False
                }
            ],
            'distances_to_borders': [
                {'country': '–ü–æ–ª—å—â–∞', 'distance': '205-432 –∫–º'},
                {'country': '–°–ª–æ–≤–∞—á—á–∏–Ω–∞', 'distance': '586 –∫–º'},
                {'country': '–£–≥–æ—Ä—â–∏–Ω–∞', 'distance': '581 –∫–º'},
            ]
        })
        
        # –î–æ–¥–∞—é —Ç–æ–≤–∞—Ä–∏ –¥–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç—É
        context['products'] = Product.objects.filter(in_stock=True).order_by('-featured', 'name')  # –í—Å—ñ —Ç–æ–≤–∞—Ä–∏ –≤ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ (—Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω—ñ –ø–µ—Ä—à–∏–º–∏)
        context['featured_products'] = Product.objects.filter(featured=True, in_stock=True)[:4]  # –†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω—ñ —Ç–æ–≤–∞—Ä–∏
        
        return context


class PortfolioView(TemplateView):
    template_name = 'mainapp/portfolio.html'
    
    def get_context_data(self, **kwargs):
        context = super().get_context_data(**kwargs)
        context.update({
            'title': '–ü–æ—Ä—Ç—Ñ–æ–ª—ñ–æ –ø—Ä–æ—î–∫—Ç—ñ–≤ ‚Äî GreenSolarTech',
            'description': '–ì–æ—Ç–æ–≤—ñ –ø—Ä–æ—î–∫—Ç–∏ —Å–æ–Ω—è—á–Ω–∏—Ö –µ–ª–µ–∫—Ç—Ä–æ—Å—Ç–∞–Ω—Ü—ñ–π –≤—ñ–¥ GreenSolarTech. –ü—Ä–∏–≤–∞—Ç–Ω—ñ —Ç–∞ –∫–æ–º–µ—Ä—Ü—ñ–π–Ω—ñ –°–ï–° –ø–æ –≤—Å—ñ–π –£–∫—Ä–∞—ó–Ω—ñ.',
            'keywords': '–ø–æ—Ä—Ç—Ñ–æ–ª—ñ–æ —Å–æ–Ω—è—á–Ω–∏—Ö –µ–ª–µ–∫—Ç—Ä–æ—Å—Ç–∞–Ω—Ü—ñ–π, –≥–æ—Ç–æ–≤—ñ –ø—Ä–æ—î–∫—Ç–∏ –°–ï–°, –ø—Ä–∏–≤–∞—Ç–Ω—ñ —Å–æ–Ω—è—á–Ω—ñ —Å—Ç–∞–Ω—Ü—ñ—ó',
            'portfolio_projects': Portfolio.objects.all().order_by('-featured', '-completion_date'),
            'featured_projects': Portfolio.objects.filter(featured=True)[:3]
        })
        return context


class CatalogView(TemplateView):
    template_name = 'mainapp/catalog.html'
    
    def get_context_data(self, **kwargs):
        context = super().get_context_data(**kwargs)
        
        # –û—Ç—Ä–∏–º—É—î–º–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ —Ñ—ñ–ª—å—Ç—Ä–∞—Ü—ñ—ó
        category = self.request.GET.get('category')
        brand = self.request.GET.get('brand')
        price_min = self.request.GET.get('price_min')
        price_max = self.request.GET.get('price_max')
        
        # –ë–∞–∑–æ–≤–∏–π –∑–∞–ø–∏—Ç
        products = Product.objects.filter(in_stock=True)
        
        # –§—ñ–ª—å—Ç—Ä–∞—Ü—ñ—è
        if category:
            products = products.filter(category__icontains=category)
        if brand:
            products = products.filter(brand__icontains=brand)
        if price_min:
            products = products.filter(price__gte=price_min)
        if price_max:
            products = products.filter(price__lte=price_max)
        
        # –£–Ω—ñ–∫–∞–ª—å–Ω—ñ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó —Ç–∞ –±—Ä–µ–Ω–¥–∏ –¥–ª—è —Ñ—ñ–ª—å—Ç—Ä—ñ–≤
        categories = Product.objects.values_list('category', flat=True).distinct()
        brands = Product.objects.values_list('brand', flat=True).distinct()
        
        # –¢–æ–≤–∞—Ä–∏ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä—ñ—è—Ö –¥–ª—è –∫–∞—Ä—É—Å–µ–ª–µ–π
        inverters = products.filter(category__icontains='—ñ–Ω–≤–µ—Ä—Ç–æ—Ä').order_by('-featured', 'name')[:10]
        solar_panels = products.filter(category__icontains='–ø–∞–Ω–µ–ª—å').order_by('-featured', 'name')[:10]
        batteries = products.filter(category__icontains='–∞–∫—É–º—É–ª—è—Ç–æ—Ä').order_by('-featured', 'name')[:10]
        backup_kits = products.filter(category__icontains='–∫–æ–º–ø–ª–µ–∫—Ç').order_by('-featured', 'name')[:10]
        
        context.update({
            'title': '–ö–∞—Ç–∞–ª–æ–≥ —Ç–æ–≤–∞—Ä—ñ–≤ ‚Äî GreenSolarTech',
            'description': '–ü–æ–≤–Ω–∏–π –∫–∞—Ç–∞–ª–æ–≥ –æ–±–ª–∞–¥–Ω–∞–Ω–Ω—è –¥–ª—è —Å–æ–Ω—è—á–Ω–∏—Ö –µ–ª–µ–∫—Ç—Ä–æ—Å—Ç–∞–Ω—Ü—ñ–π: —ñ–Ω–≤–µ—Ä—Ç–æ—Ä–∏, –ø–∞–Ω–µ–ª—ñ, –∞–∫—É–º—É–ª—è—Ç–æ—Ä–∏, –∫–æ–º–ø–ª–µ–∫—Ç–∏.',
            'keywords': '–∫–∞—Ç–∞–ª–æ–≥ —Å–æ–Ω—è—á–Ω–æ–≥–æ –æ–±–ª–∞–¥–Ω–∞–Ω–Ω—è, —ñ–Ω–≤–µ—Ä—Ç–æ—Ä–∏, —Å–æ–Ω—è—á–Ω—ñ –ø–∞–Ω–µ–ª—ñ, –∞–∫—É–º—É–ª—è—Ç–æ—Ä–∏',
            'categories': categories,
            'brands': brands,
            'selected_category': category,
            'selected_brand': brand,
            'price_min': price_min,
            'price_max': price_max,
            'inverters': inverters,
            'solar_panels': solar_panels,
            'batteries': batteries,
            'backup_kits': backup_kits,
        })
        return context


class CategoryView(TemplateView):
    template_name = 'mainapp/category.html'
    
    def get_context_data(self, **kwargs):
        context = super().get_context_data(**kwargs)
        category_key = kwargs.get('category')
        
        # –ú–∞–ø–ø—ñ–Ω–≥ –∞–Ω–≥–ª—ñ–π—Å—å–∫–∏—Ö –∫–ª—é—á—ñ–≤ URL –Ω–∞ —É–∫—Ä–∞—ó–Ω—Å—å–∫—ñ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó
        category_mapping = {
            'inverters': '—ñ–Ω–≤–µ—Ä—Ç–æ—Ä',
            'solar-panels': '—Å–æ–Ω—è—á–Ω–∞ –ø–∞–Ω–µ–ª—å', 
            'batteries': '–∞–∫—É–º—É–ª—è—Ç–æ—Ä',
            'backup-power': '–∫–æ–º–ø–ª–µ–∫—Ç —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∂–∏–≤–ª–µ–Ω–Ω—è'
        }
        
        # –û—Ç—Ä–∏–º—É—î–º–æ —É–∫—Ä–∞—ó–Ω—Å—å–∫—É –Ω–∞–∑–≤—É –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó
        ukrainian_category = category_mapping.get(category_key, category_key)
        
        # –û—Ç—Ä–∏–º—É—î–º–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ —Ñ—ñ–ª—å—Ç—Ä–∞—Ü—ñ—ó
        brand = self.request.GET.get('brand')
        min_price = self.request.GET.get('min_price')
        max_price = self.request.GET.get('max_price')
        
        # –ë–∞–∑–æ–≤–∏–π –∑–∞–ø–∏—Ç –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó
        products = Product.objects.filter(in_stock=True, category__icontains=ukrainian_category)
        
        # –§—ñ–ª—å—Ç—Ä–∞—Ü—ñ—è
        if brand:
            products = products.filter(brand__icontains=brand)
        if min_price:
            products = products.filter(price__gte=min_price)
        if max_price:
            products = products.filter(price__lte=max_price)
        
        # –£–Ω—ñ–∫–∞–ª—å–Ω—ñ –±—Ä–µ–Ω–¥–∏ –¥–ª—è —Ü—ñ—î—ó –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó
        brands = Product.objects.filter(category__icontains=ukrainian_category).values_list('brand', flat=True).distinct()
        
        # –ù–∞–∑–≤–∏ –∫–∞—Ç–µ–≥–æ—Ä—ñ–π –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è
        category_names = {
            'inverters': '–Ü–Ω–≤–µ—Ä—Ç–æ—Ä–∏',
            'solar-panels': '–°–æ–Ω—è—á–Ω—ñ –ø–∞–Ω–µ–ª—ñ', 
            'batteries': '–ê–∫—É–º—É–ª—è—Ç–æ—Ä–Ω—ñ –±–∞—Ç–∞—Ä–µ—ó',
            'backup-power': '–ö–æ–º–ø–ª–µ–∫—Ç–∏ —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∂–∏–≤–ª–µ–Ω–Ω—è'
        }
        
        category_name = category_names.get(category_key, category_key.title())
        
        context.update({
            'title': f'{category_name} ‚Äî GreenSolarTech',
            'description': f'–ö–∞—Ç–∞–ª–æ–≥ {category_name.lower()} –¥–ª—è —Å–æ–Ω—è—á–Ω–∏—Ö –µ–ª–µ–∫—Ç—Ä–æ—Å—Ç–∞–Ω—Ü—ñ–π –≤—ñ–¥ –ø—Ä–æ–≤—ñ–¥–Ω–∏—Ö –≤–∏—Ä–æ–±–Ω–∏–∫—ñ–≤.',
            'keywords': f'{category_name.lower()}, —Å–æ–Ω—è—á–Ω–µ –æ–±–ª–∞–¥–Ω–∞–Ω–Ω—è, GreenSolarTech',
            'products': products.order_by('-featured', 'name'),
            'category_name': category_name,
            'category_key': category_key,
            'brands': brands,
            'selected_brand': brand,
            'min_price': min_price,
            'max_price': max_price
        })
        return context


class ReviewsView(TemplateView):
    template_name = 'mainapp/reviews.html'
    
    def get_context_data(self, **kwargs):
        context = super().get_context_data(**kwargs)
        context.update({
            'title': '–í—ñ–¥–≥—É–∫–∏ –∫–ª—ñ—î–Ω—Ç—ñ–≤ ‚Äî GreenSolarTech',
            'description': '–í—ñ–¥–≥—É–∫–∏ –Ω–∞—à–∏—Ö –∫–ª—ñ—î–Ω—Ç—ñ–≤ –ø—Ä–æ –±—É–¥—ñ–≤–Ω–∏—Ü—Ç–≤–æ —Å–æ–Ω—è—á–Ω–∏—Ö –µ–ª–µ–∫—Ç—Ä–æ—Å—Ç–∞–Ω—Ü—ñ–π —Ç–∞ —è–∫—ñ—Å—Ç—å –æ–±—Å–ª—É–≥–æ–≤—É–≤–∞–Ω–Ω—è.',
            'keywords': '–≤—ñ–¥–≥—É–∫–∏ –ø—Ä–æ —Å–æ–Ω—è—á–Ω—ñ –µ–ª–µ–∫—Ç—Ä–æ—Å—Ç–∞–Ω—Ü—ñ—ó, –≤—ñ–¥–≥—É–∫–∏ –∫–ª—ñ—î–Ω—Ç—ñ–≤ GreenSolarTech',
            'reviews': Review.objects.filter(is_published=True).order_by('-created_at'),
            'average_rating': Review.objects.filter(is_published=True).aggregate(
                avg_rating=Avg('rating')
            )['avg_rating'] or 0
        })
        return context


def sitemap_xml(request):
    """–ì–µ–Ω–µ—Ä–∞—Ü—ñ—è sitemap.xml –¥–ª—è SEO"""
    xml_content = '''<?xml version="1.0" encoding="UTF-8"?>
<urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9">
    <url>
        <loc>https://greensolalrtech.com/</loc>
        <lastmod>2024-01-01</lastmod>
        <changefreq>monthly</changefreq>
        <priority>1.0</priority>
    </url>
    <url>
        <loc>https://greensolalrtech.com/portfolio/</loc>
        <lastmod>2024-01-01</lastmod>
        <changefreq>monthly</changefreq>
        <priority>0.8</priority>
    </url>
    <url>
        <loc>https://greensolalrtech.com/catalog/</loc>
        <lastmod>2024-01-01</lastmod>
        <changefreq>weekly</changefreq>
        <priority>0.9</priority>
    </url>
    <url>
        <loc>https://greensolalrtech.com/reviews/</loc>
        <lastmod>2024-01-01</lastmod>
        <changefreq>monthly</changefreq>
        <priority>0.7</priority>
    </url>
</urlset>'''
    return HttpResponse(xml_content, content_type='application/xml')


def robots_txt(request):
    """–ì–µ–Ω–µ—Ä–∞—Ü—ñ—è robots.txt –¥–ª—è SEO"""
    txt_content = '''User-agent: *
Allow: /
Sitemap: https://greensolalrtech.com/sitemap.xml'''
    return HttpResponse(txt_content, content_type='text/plain')
