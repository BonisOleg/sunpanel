// –ö–æ—Ä–∑–∏–Ω–∞ —Ç–æ–≤–∞—Ä—ñ–≤
class ShoppingCart {
    constructor() {
        console.log('ShoppingCart constructor –≤–∏–∫–ª–∏–∫–∞–Ω–æ');
        this.cart = this.loadCart();
        this.initEventListeners();
        this.updateCartDisplay();

        // –Ø–∫—â–æ —î —Ç–æ–≤–∞—Ä–∏ –≤ –∫–æ—Ä–∑–∏–Ω—ñ - –æ–¥—Ä–∞–∑—É —Ä–µ–Ω–¥–µ—Ä–∏–º–æ —ó—Ö
        if (this.cart.length > 0) {
            console.log('–ó–Ω–∞–π–¥–µ–Ω–æ —Ç–æ–≤–∞—Ä–∏ –≤ –∫–æ—Ä–∑–∏–Ω—ñ –ø—Ä–∏ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó, —Ä–µ–Ω–¥–µ—Ä—é...');
            setTimeout(() => {
                this.renderCartItems();
            }, 100);
        }

        console.log('ShoppingCart —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ –∑ –∫–æ—Ä–∑–∏–Ω–æ—é:', this.cart);
    }

    // –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∫–æ—Ä–∑–∏–Ω–∏ –∑ localStorage
    loadCart() {
        const savedCart = localStorage.getItem('shoppingCart');
        console.log('localStorage shoppingCart:', savedCart);
        const cart = savedCart ? JSON.parse(savedCart) : [];
        console.log('–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–∞ –∫–æ—Ä–∑–∏–Ω–∞:', cart);
        return cart;
    }

    // –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è –∫–æ—Ä–∑–∏–Ω–∏ –≤ localStorage
    saveCart() {
        localStorage.setItem('shoppingCart', JSON.stringify(this.cart));
    }

    // –î–æ–¥–∞–≤–∞–Ω–Ω—è —Ç–æ–≤–∞—Ä—É –≤ –∫–æ—Ä–∑–∏–Ω—É
    addToCart(product) {
        console.log('addToCart –≤–∏–∫–ª–∏–∫–∞–Ω–æ –∑:', product);
        const existingItem = this.cart.find(item => item.id === product.id);

        if (existingItem) {
            console.log('–¢–æ–≤–∞—Ä –≤–∂–µ —ñ—Å–Ω—É—î, –∑–±—ñ–ª—å—à—É—é –∫—ñ–ª—å–∫—ñ—Å—Ç—å');
            existingItem.quantity += 1;
        } else {
            console.log('–î–æ–¥–∞—é –Ω–æ–≤–∏–π —Ç–æ–≤–∞—Ä');
            this.cart.push({
                id: product.id,
                name: product.name,
                price: parseFloat(product.price),
                image: product.image || '',
                quantity: 1
            });
        }

        console.log('–ö–æ—Ä–∑–∏–Ω–∞ –ø—ñ—Å–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è:', this.cart);
        this.saveCart();
        this.updateCartDisplay();
        this.showAddToCartNotification(product.name);
    }

    // –í–∏–¥–∞–ª–µ–Ω–Ω—è —Ç–æ–≤–∞—Ä—É –∑ –∫–æ—Ä–∑–∏–Ω–∏
    removeFromCart(productId) {
        console.log('removeFromCart –≤–∏–∫–ª–∏–∫–∞–Ω–æ –¥–ª—è:', productId);
        console.log('–ö–æ—Ä–∑–∏–Ω–∞ –¥–æ –≤–∏–¥–∞–ª–µ–Ω–Ω—è:', this.cart);
        this.cart = this.cart.filter(item => item.id !== productId);
        console.log('–ö–æ—Ä–∑–∏–Ω–∞ –ø—ñ—Å–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è:', this.cart);
        this.saveCart();
        this.updateCartDisplay();
        this.renderCartItems();
    }

    // –ó–º—ñ–Ω–∞ –∫—ñ–ª—å–∫–æ—Å—Ç—ñ —Ç–æ–≤–∞—Ä—É
    updateQuantity(productId, newQuantity) {
        console.log('updateQuantity –≤–∏–∫–ª–∏–∫–∞–Ω–æ –¥–ª—è:', productId, '–Ω–æ–≤–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å:', newQuantity);
        const item = this.cart.find(item => item.id === productId);
        if (item) {
            if (newQuantity <= 0) {
                console.log('–ö—ñ–ª—å–∫—ñ—Å—Ç—å <= 0, –≤–∏–¥–∞–ª—è—é —Ç–æ–≤–∞—Ä');
                this.removeFromCart(productId);
            } else {
                console.log('–û–Ω–æ–≤–ª—é—é –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∑', item.quantity, '–Ω–∞', newQuantity);
                item.quantity = newQuantity;
                this.saveCart();
                this.updateCartDisplay();
                this.renderCartItems();
            }
        } else {
            console.log('–¢–æ–≤–∞—Ä –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –≤ –∫–æ—Ä–∑–∏–Ω—ñ:', productId);
        }
    }

    // –û—Ç—Ä–∏–º–∞–Ω–Ω—è –∑–∞–≥–∞–ª—å–Ω–æ—ó –∫—ñ–ª—å–∫–æ—Å—Ç—ñ —Ç–æ–≤–∞—Ä—ñ–≤
    getTotalQuantity() {
        return this.cart.reduce((total, item) => total + item.quantity, 0);
    }

    // –û—Ç—Ä–∏–º–∞–Ω–Ω—è –∑–∞–≥–∞–ª—å–Ω–æ—ó —Å—É–º–∏
    getTotalPrice() {
        return this.cart.reduce((total, item) => total + (item.price * item.quantity), 0);
    }

    // –û–Ω–æ–≤–ª–µ–Ω–Ω—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∫–æ—Ä–∑–∏–Ω–∏
    updateCartDisplay() {
        console.log('updateCartDisplay –≤–∏–∫–ª–∏–∫–∞–Ω–æ');
        const cartCount = document.getElementById('cart-count');
        const cartTotal = document.getElementById('cart-total');

        if (cartCount) {
            const totalQuantity = this.getTotalQuantity();
            console.log('–û–Ω–æ–≤–ª—é—é –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Ç–æ–≤–∞—Ä—ñ–≤:', totalQuantity);
            cartCount.textContent = totalQuantity;
            cartCount.style.display = totalQuantity > 0 ? 'block' : 'none';
        } else {
            console.log('–ï–ª–µ–º–µ–Ω—Ç cart-count –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ');
        }

        if (cartTotal) {
            const totalPrice = this.getTotalPrice();
            console.log('–û–Ω–æ–≤–ª—é—é –∑–∞–≥–∞–ª—å–Ω—É —Å—É–º—É:', totalPrice);
            cartTotal.textContent = `‚Ç¥${totalPrice.toFixed(2)}`;
        } else {
            console.log('–ï–ª–µ–º–µ–Ω—Ç cart-total –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ');
        }
    }

    // –†–µ–Ω–¥–µ—Ä —Ç–æ–≤–∞—Ä—ñ–≤ –≤ –∫–æ—Ä–∑–∏–Ω—ñ
    renderCartItems() {
        console.log('renderCartItems –≤–∏–∫–ª–∏–∫–∞–Ω–æ');
        const cartItemsContainer = document.getElementById('cart-items');
        const cartModal = document.getElementById('cart-modal');
        const cartContent = cartModal?.querySelector('.cart-modal__content');

        console.log('cartItemsContainer:', cartItemsContainer);
        console.log('this.cart:', this.cart);

        if (!cartItemsContainer) {
            console.error('–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ –µ–ª–µ–º–µ–Ω—Ç cart-items');
            return;
        }

        // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —Ä–µ–∂–∏–º –ø–µ—Ä–µ–≥–ª—è–¥—É –∫–æ—Ä–∑–∏–Ω–∏
        if (cartContent) {
            cartContent.className = 'cart-modal__content cart-view';
        }

        if (this.cart.length === 0) {
            console.log('–ö–æ—Ä–∑–∏–Ω–∞ –ø–æ—Ä–æ–∂–Ω—è');
            cartItemsContainer.innerHTML = `
                <div class="cart-empty">
                    <p>–ö–æ—Ä–∑–∏–Ω–∞ –ø–æ—Ä–æ–∂–Ω—è</p>
                    <p>–î–æ–¥–∞–π—Ç–µ —Ç–æ–≤–∞—Ä–∏ –∑ –∫–∞—Ç–∞–ª–æ–≥—É</p>
                </div>
            `;
            return;
        }

        console.log('–†–µ–Ω–¥–µ—Ä—é —Ç–æ–≤–∞—Ä–∏:', this.cart.length);

        // –†–µ–Ω–¥–µ—Ä–∏–º–æ —Ç–æ–≤–∞—Ä–∏
        const itemsHTML = this.cart.map(item => `
            <div class="cart-item" data-product-id="${item.id}">
                <div class="cart-item__image">
                    ${item.image ?
                `<img src="${item.image}" alt="${item.name}" class="cart-item__img">` :
                `<div class="cart-item__placeholder">–ù–µ–º–∞—î —Ñ–æ—Ç–æ</div>`
            }
                </div>
                <div class="cart-item__content">
                    <h4 class="cart-item__name">${item.name}</h4>
                    <div class="cart-item__price">‚Ç¥${item.price.toFixed(2)}</div>
                </div>
                <div class="cart-item__controls">
                    <div class="quantity-controls">
                        <button class="quantity-btn minus" data-product-id="${item.id}">-</button>
                        <span class="quantity-value">${item.quantity}</span>
                        <button class="quantity-btn plus" data-product-id="${item.id}">+</button>
                    </div>
                    <button class="remove-btn" data-product-id="${item.id}">
                        <svg width="16" height="16" viewBox="0 0 16 16" fill="currentColor">
                            <path d="M4 4L12 12M4 12L12 4" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                        </svg>
                    </button>
                </div>
                <div class="cart-item__total">‚Ç¥${(item.price * item.quantity).toFixed(2)}</div>
            </div>
        `).join('');

        // –î–æ–¥–∞—î–º–æ –∫–Ω–æ–ø–∫—É –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
        const checkoutButton = `
            <div style="padding: 1.5rem; text-align: center;">
                <button class="cart-checkout-btn" id="checkout-btn" ${this.cart.length === 0 ? 'disabled' : ''}>
                    <span>üõí</span> –û—Ñ–æ—Ä–º–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
                </button>
            </div>
        `;

        cartItemsContainer.innerHTML = itemsHTML + checkoutButton;

        console.log('HTML –∑–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–æ:', cartItemsContainer.innerHTML.length, '—Å–∏–º–≤–æ–ª—ñ–≤');

        // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è
        const checkoutBtn = document.getElementById('checkout-btn');
        if (checkoutBtn) {
            checkoutBtn.addEventListener('click', () => {
                this.showCheckoutForm();
            });
        }
    }

    // –ü–æ–∫–∞–∑–∞—Ç–∏ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è –ø—Ä–æ –¥–æ–¥–∞–≤–∞–Ω–Ω—è —Ç–æ–≤–∞—Ä—É
    showAddToCartNotification(productName) {
        const notification = document.createElement('div');
        notification.className = 'cart-notification';
        notification.innerHTML = `
            <div class="cart-notification__content">
                <svg width="20" height="20" viewBox="0 0 20 20" fill="currentColor">
                    <path d="M10 0C4.5 0 0 4.5 0 10s4.5 10 10 10 10-4.5 10-10S15.5 0 10 0zm4.2 7.7l-5 5c-.2.2-.4.3-.7.3s-.5-.1-.7-.3l-2.5-2.5c-.4-.4-.4-1 0-1.4s1-.4 1.4 0L8.5 11l4.3-4.3c.4-.4 1-.4 1.4 0s.4 1 0 1.4z"/>
                </svg>
                <span>–¢–æ–≤–∞—Ä "${productName}" –¥–æ–¥–∞–Ω–æ –≤ –∫–æ—Ä–∑–∏–Ω—É</span>
            </div>
        `;

        document.body.appendChild(notification);

        setTimeout(() => {
            notification.style.opacity = '1';
            notification.style.transform = 'translateY(0)';
        }, 100);

        setTimeout(() => {
            notification.style.opacity = '0';
            notification.style.transform = 'translateY(-20px)';
            setTimeout(() => notification.remove(), 300);
        }, 3000);
    }

    // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è —Å–ª—É—Ö–∞—á—ñ–≤ –ø–æ–¥—ñ–π
    initEventListeners() {
        // –í—ñ–¥–∫—Ä–∏—Ç—Ç—è –∫–æ—Ä–∑–∏–Ω–∏
        document.addEventListener('click', (e) => {
            if (e.target.closest('#cart-btn')) {
                this.openCart();
            }
        });

        // –ó–∞–∫—Ä–∏—Ç—Ç—è –∫–æ—Ä–∑–∏–Ω–∏ - –ø–æ–ª—ñ–ø—à–µ–Ω–∞ –≤–µ—Ä—Å—ñ—è
        document.addEventListener('click', (e) => {
            // –ó–∞–∫—Ä–∏—Ç—Ç—è –ø–æ –∫–ª—ñ–∫—É –Ω–∞ —Ö—Ä–µ—Å—Ç–∏–∫
            if (e.target.matches('#cart-close') || e.target.closest('#cart-close')) {
                e.preventDefault();
                this.closeCart();
                return;
            }

            // –ó–∞–∫—Ä–∏—Ç—Ç—è –ø–æ –∫–ª—ñ–∫—É –Ω–∞ –æ–≤–µ—Ä–ª–µ–π
            if (e.target.matches('#cart-overlay')) {
                e.preventDefault();
                this.closeCart();
                return;
            }
        });

        // –î–æ–¥–∞–≤–∞–Ω–Ω—è —Ç–æ–≤–∞—Ä—ñ–≤ –≤ –∫–æ—Ä–∑–∏–Ω—É
        document.addEventListener('click', (e) => {
            if (e.target.classList.contains('add-to-cart-btn')) {
                e.preventDefault();
                const button = e.target;
                console.log('–ù–∞—Ç–∏—Å–Ω—É—Ç–æ –∫–Ω–æ–ø–∫—É –¥–æ–¥–∞–≤–∞–Ω–Ω—è —Ç–æ–≤–∞—Ä—É');
                console.log('–ö–Ω–æ–ø–∫–∞:', button);
                console.log('Dataset:', button.dataset);

                const product = {
                    id: button.dataset.productId,
                    name: button.dataset.productName,
                    price: button.dataset.productPrice,
                    image: button.dataset.productImage
                };

                console.log('–î–∞–Ω—ñ —Ç–æ–≤–∞—Ä—É:', product);

                // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ –≤—Å—ñ –¥–∞–Ω—ñ —î
                if (!product.id || !product.name || !product.price) {
                    console.error('–í—ñ–¥—Å—É—Ç–Ω—ñ –æ–±–æ–≤\'—è–∑–∫–æ–≤—ñ –¥–∞–Ω—ñ —Ç–æ–≤–∞—Ä—É:', product);
                    alert('–ü–æ–º–∏–ª–∫–∞: –Ω–µ –≤–¥–∞–ª–æ—Å—è –¥–æ–¥–∞—Ç–∏ —Ç–æ–≤–∞—Ä –¥–æ –∫–æ—Ä–∑–∏–Ω–∏ (–≤—ñ–¥—Å—É—Ç–Ω—ñ –¥–∞–Ω—ñ)');
                    return;
                }

                this.addToCart(product);
            }
        });

        // –ö–µ—Ä—É–≤–∞–Ω–Ω—è –∫—ñ–ª—å–∫—ñ—Å—Ç—é —Ç–æ–≤–∞—Ä—ñ–≤ –≤ –∫–æ—Ä–∑–∏–Ω—ñ
        document.addEventListener('click', (e) => {
            // –ó–Ω–∞—Ö–æ–¥–∏–º–æ productId –∑ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞
            let productId = e.target.dataset.productId;
            let button = null;

            // –î–ª—è –∫–Ω–æ–ø–∫–∏ –ø–ª—é—Å
            if (e.target.classList.contains('plus')) {
                productId = e.target.dataset.productId;
                console.log('–ù–∞—Ç–∏—Å–Ω—É—Ç–æ –ø–ª—é—Å –¥–ª—è —Ç–æ–≤–∞—Ä—É:', productId);
                const item = this.cart.find(item => item.id === productId);
                if (item) {
                    this.updateQuantity(productId, item.quantity + 1);
                }
            }

            // –î–ª—è –∫–Ω–æ–ø–∫–∏ –º—ñ–Ω—É—Å
            if (e.target.classList.contains('minus')) {
                productId = e.target.dataset.productId;
                console.log('–ù–∞—Ç–∏—Å–Ω—É—Ç–æ –º—ñ–Ω—É—Å –¥–ª—è —Ç–æ–≤–∞—Ä—É:', productId);
                const item = this.cart.find(item => item.id === productId);
                if (item) {
                    this.updateQuantity(productId, item.quantity - 1);
                }
            }

            // –î–ª—è –∫–Ω–æ–ø–∫–∏ –≤–∏–¥–∞–ª–µ–Ω–Ω—è (–æ–±—Ä–æ–±–ª—è—î–º–æ SVG —Ç–∞ —Å–∞–º—É –∫–Ω–æ–ø–∫—É)
            button = e.target.closest('.remove-btn');
            if (button) {
                productId = button.dataset.productId;
                console.log('–ù–∞—Ç–∏—Å–Ω—É—Ç–æ –≤–∏–¥–∞–ª–µ–Ω–Ω—è –¥–ª—è —Ç–æ–≤–∞—Ä—É:', productId);
                if (productId) {
                    this.removeFromCart(productId);
                }
            }
        });

        // –û–±—Ä–æ–±–∫–∞ —Ñ–æ—Ä–º–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
        document.addEventListener('submit', (e) => {
            if (e.target.matches('#checkout-form')) {
                e.preventDefault();
                this.handleCheckout(e.target);
            }
        });

        // –ó–∞–∫—Ä–∏—Ç—Ç—è –∫–æ—Ä–∑–∏–Ω–∏ –∫–ª–∞–≤—ñ—à–µ—é Escape
        document.addEventListener('keydown', (e) => {
            if (e.key === 'Escape') {
                this.closeCart();
            }
        });
    }

    // –í—ñ–¥–∫—Ä–∏—Ç—Ç—è –∫–æ—Ä–∑–∏–Ω–∏
    openCart() {
        console.log('–í—ñ–¥–∫—Ä–∏–≤–∞—é –∫–æ—Ä–∑–∏–Ω—É...');
        const modal = document.getElementById('cart-modal');
        if (modal) {
            modal.classList.add('active');
            document.body.style.overflow = 'hidden';
            console.log('–ö–æ—Ä–∑–∏–Ω–∞ –≤—ñ–¥–∫—Ä–∏—Ç–∞, –∫–ª–∞—Å–∏:', modal.classList.toString());

            // –ó–∞–≤–∂–¥–∏ –ø–æ–∫–∞–∑—É—î–º–æ —Å–ø–æ—á–∞—Ç–∫—É —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä—ñ–≤
            this.showCartItems();

        } else {
            console.error('–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ –µ–ª–µ–º–µ–Ω—Ç cart-modal');
        }
    }

    // –ó–∞–∫—Ä–∏—Ç—Ç—è –∫–æ—Ä–∑–∏–Ω–∏
    closeCart() {
        console.log('–ó–∞–∫—Ä–∏–≤–∞—é –∫–æ—Ä–∑–∏–Ω—É...');
        const modal = document.getElementById('cart-modal');
        if (modal) {
            modal.classList.remove('active');
            document.body.style.overflow = '';
            console.log('–ö–æ—Ä–∑–∏–Ω–∞ –∑–∞–∫—Ä–∏—Ç–∞, –∫–ª–∞—Å–∏:', modal.classList.toString());
        } else {
            console.error('–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ –µ–ª–µ–º–µ–Ω—Ç cart-modal');
        }
    }

    // –û–±—Ä–æ–±–∫–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
    async handleCheckout(form) {
        const formData = new FormData(form);
        const orderData = {
            name: formData.get('name'),
            phone: formData.get('phone'),
            email: formData.get('email'),
            comment: formData.get('comment'),
            items: this.cart,
            total: this.getTotalPrice()
        };

        try {
            // –¢—É—Ç –º–æ–∂–Ω–∞ –≤—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ –¥–∞–Ω—ñ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
            console.log('–î–∞–Ω—ñ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è:', orderData);

            // –°–∏–º—É–ª—è—Ü—ñ—è –≤—ñ–¥–ø—Ä–∞–≤–∫–∏
            await this.simulateOrderSubmission(orderData);

            // –û—á–∏—â–µ–Ω–Ω—è –∫–æ—Ä–∑–∏–Ω–∏ –ø—ñ—Å–ª—è —É—Å–ø—ñ—à–Ω–æ–≥–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
            this.clearCart();
            this.closeCart();
            this.showOrderSuccessMessage();

        } catch (error) {
            console.error('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω—ñ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è:', error);
            alert('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω—ñ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.');
        }
    }

    // –í—ñ–¥–ø—Ä–∞–≤–∫–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä
    async simulateOrderSubmission(orderData) {
        // –û—Ç—Ä–∏–º–∞–Ω–Ω—è CSRF —Ç–æ–∫–µ–Ω–∞
        const csrfToken = document.querySelector('[name=csrfmiddlewaretoken]')?.value ||
            document.querySelector('meta[name="csrf-token"]')?.content;

        const response = await fetch('/api/orders/', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'X-CSRFToken': csrfToken
            },
            body: JSON.stringify({
                ...orderData,
                csrfmiddlewaretoken: csrfToken
            })
        });

        if (!response.ok) {
            const error = await response.json();
            throw new Error(error.error || '–ü–æ–º–∏–ª–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞');
        }

        return await response.json();
    }

    // –û—á–∏—â–µ–Ω–Ω—è –∫–æ—Ä–∑–∏–Ω–∏
    clearCart() {
        this.cart = [];
        this.saveCart();
        this.updateCartDisplay();
    }

    // –ü–æ–∫–∞–∑–∞—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ —É—Å–ø—ñ—à–Ω–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
    showOrderSuccessMessage() {
        const notification = document.createElement('div');
        notification.className = 'order-success-notification';
        notification.innerHTML = `
            <div class="order-success-notification__content">
                <div class="success-icon">‚úì</div>
                <h3>–ó–∞–º–æ–≤–ª–µ–Ω–Ω—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–æ!</h3>
                <p>–ú–∏ –∑–≤'—è–∂–µ–º–æ—Å—è –∑ –≤–∞–º–∏ –Ω–∞–π–±–ª–∏–∂—á–∏–º —á–∞—Å–æ–º</p>
            </div>
        `;

        document.body.appendChild(notification);

        setTimeout(() => {
            notification.style.opacity = '1';
        }, 100);

        setTimeout(() => {
            notification.style.opacity = '0';
            setTimeout(() => notification.remove(), 300);
        }, 5000);
    }

    // –ú–µ—Ç–æ–¥–∏ –¥–ª—è –≤—ñ–¥–ª–∞–≥–æ–¥–∂–µ–Ω–Ω—è (–¥–æ—Å—Ç—É–ø–Ω—ñ —á–µ—Ä–µ–∑ –∫–æ–Ω—Å–æ–ª—å)
    debugCart() {
        console.log('=== –í–Ü–î–õ–ê–ì–û–î–ñ–ï–ù–ù–Ø –ö–û–†–ó–ò–ù–ò ===');
        console.log('–ö–æ—Ä–∑–∏–Ω–∞:', this.cart);
        console.log('–ó–∞–≥–∞–ª—å–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å:', this.getTotalQuantity());
        console.log('–ó–∞–≥–∞–ª—å–Ω–∞ —Å—É–º–∞:', this.getTotalPrice());
        console.log('LocalStorage:', localStorage.getItem('shoppingCart'));

        const modal = document.getElementById('cart-modal');
        const cartItems = document.getElementById('cart-items');
        console.log('–ú–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ:', modal);
        console.log('–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä —Ç–æ–≤–∞—Ä—ñ–≤:', cartItems);
        console.log('–ú–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ –∞–∫—Ç–∏–≤–Ω–µ:', modal?.classList.contains('active'));

        if (cartItems) {
            console.log('HTML –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ —Ç–æ–≤–∞—Ä—ñ–≤:', cartItems.innerHTML);
        }
    }

    clearDebugCart() {
        localStorage.removeItem('shoppingCart');
        this.cart = [];
        this.updateCartDisplay();
        console.log('–ö–æ—Ä–∑–∏–Ω–∞ –æ—á–∏—â–µ–Ω–∞');
    }

    // –ú–µ—Ç–æ–¥ –¥–ª—è —à–≤–∏–¥–∫–æ–≥–æ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è
    addTestItems() {
        console.log('–î–æ–¥–∞—é —Ç–µ—Å—Ç–æ–≤—ñ —Ç–æ–≤–∞—Ä–∏...');
        const testProducts = [
            {
                id: 'test1',
                name: '–¢–µ—Å—Ç–æ–≤–∏–π —ñ–Ω–≤–µ—Ä—Ç–æ—Ä',
                price: '15000',
                image: '/static/images/test1.jpg'
            },
            {
                id: 'test2',
                name: '–¢–µ—Å—Ç–æ–≤–∞ –ø–∞–Ω–µ–ª—å',
                price: '5000',
                image: '/static/images/test2.jpg'
            }
        ];

        testProducts.forEach(product => {
            this.addToCart(product);
        });

        console.log('–¢–µ—Å—Ç–æ–≤—ñ —Ç–æ–≤–∞—Ä–∏ –¥–æ–¥–∞–Ω—ñ');
        return this.cart;
    }

    // –ü—Ä–∏–º—É—Å–æ–≤–∏–π —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥ –¥–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è
    forceRender() {
        console.log('=== –ü–†–ò–ú–£–°–û–í–ò–ô –†–ï–ù–î–ï–†–ò–ù–ì ===');
        const cartItems = document.getElementById('cart-items');
        console.log('–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä cart-items:', cartItems);
        console.log('–¢–æ–≤–∞—Ä–∏ –≤ –∫–æ—Ä–∑–∏–Ω—ñ:', this.cart);

        if (!cartItems) {
            console.error('–ü–û–ú–ò–õ–ö–ê: –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä cart-items –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ!');
            return;
        }

        if (this.cart.length === 0) {
            console.log('–ö–æ—Ä–∑–∏–Ω–∞ –ø–æ—Ä–æ–∂–Ω—è - –¥–æ–¥–∞—é —Ç–µ—Å—Ç–æ–≤—ñ —Ç–æ–≤–∞—Ä–∏...');
            this.addTestItems();
        }

        // –ü—Ä–∏–º—É—Å–æ–≤–æ –æ—á–∏—â–∞—î–º–æ —Ç–∞ —Ä–µ–Ω–¥–µ—Ä–∏–º–æ
        cartItems.innerHTML = '';
        this.renderCartItems();

        console.log('–ü—ñ—Å–ª—è —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥—É:');
        console.log('HTML:', cartItems.innerHTML);
        console.log('–í–∏–¥–∏–º—ñ—Å—Ç—å:', cartItems.style.display);
        console.log('–í–∏—Å–æ—Ç–∞:', cartItems.offsetHeight);

        return cartItems.innerHTML;
    }

    // –ü–æ–∫–∞–∑–∞—Ç–∏ —Ñ–æ—Ä–º—É –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
    showCheckoutForm() {
        console.log('–ü–æ–∫–∞–∑—É—é —Ñ–æ—Ä–º—É –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è');
        const cartModal = document.getElementById('cart-modal');
        const cartContent = cartModal?.querySelector('.cart-modal__content');

        if (cartContent) {
            cartContent.className = 'cart-modal__content order-view';
        }

        // –û–Ω–æ–≤–ª—é—î–º–æ —Ñ–æ—Ä–º—É –∑ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—î—é –ø—Ä–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
        this.updateOrderForm();
    }

    // –ü–æ–∫–∞–∑–∞—Ç–∏ —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä—ñ–≤ –∫–æ—Ä–∑–∏–Ω–∏  
    showCartItems() {
        console.log('–ü–æ–∫–∞–∑—É—é —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä—ñ–≤');
        const cartModal = document.getElementById('cart-modal');
        const cartContent = cartModal?.querySelector('.cart-modal__content');

        if (cartContent) {
            cartContent.className = 'cart-modal__content cart-view';
        }

        // –ü–µ—Ä–µ—Ä–µ–Ω–¥–µ—Ä—é—î–º–æ —Ç–æ–≤–∞—Ä–∏
        this.renderCartItems();
    }

    // –û–Ω–æ–≤–ª–µ–Ω–Ω—è —Ñ–æ—Ä–º–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –∑ —Ä–µ–∑—é–º–µ
    updateOrderForm() {
        const orderForm = document.getElementById('order-form');
        if (!orderForm) return;

        const totalQuantity = this.getTotalQuantity();
        const totalPrice = this.getTotalPrice();

        // –°—Ç–≤–æ—Ä—é—î–º–æ —Ä–µ–∑—é–º–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
        const orderSummary = `
            <div class="order-form__header">
                <h3 class="order-form__title">–û—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è</h3>
                <p class="order-form__subtitle">–ó–∞–ø–æ–≤–Ω—ñ—Ç—å –≤–∞—à—ñ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ñ –¥–∞–Ω—ñ –¥–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è</p>
            </div>
            
            <div class="order-form__summary">
                <div class="order-form__summary-title">–†–µ–∑—é–º–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è:</div>
                <div class="order-form__summary-items">–¢–æ–≤–∞—Ä—ñ–≤ —É –∫–æ—à–∏–∫—É: ${totalQuantity} —à—Ç.</div>
                <div class="order-form__summary-total">–î–æ —Å–ø–ª–∞—Ç–∏: ‚Ç¥${totalPrice.toFixed(2)}</div>
            </div>
        `;

        // –ó–Ω–∞—Ö–æ–¥–∏–º–æ —Ñ–æ—Ä–º—É —Ç–∞ –¥–æ–¥–∞—î–º–æ —Ä–µ–∑—é–º–µ –ø–µ—Ä–µ–¥ –Ω–µ—é
        const form = orderForm.querySelector('#checkout-form');
        if (form) {
            // –í–∏–¥–∞–ª—è—î–º–æ —Å—Ç–∞—Ä–µ —Ä–µ–∑—é–º–µ —è–∫—â–æ —î
            const existingSummary = orderForm.querySelector('.order-form__header');
            if (existingSummary) {
                existingSummary.remove();
            }
            const existingSummaryBlock = orderForm.querySelector('.order-form__summary');
            if (existingSummaryBlock) {
                existingSummaryBlock.remove();
            }

            // –î–æ–¥–∞—î–º–æ –Ω–æ–≤–µ —Ä–µ–∑—é–º–µ
            form.insertAdjacentHTML('beforebegin', orderSummary);

            // –î–æ–¥–∞—î–º–æ –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥ –¥–æ –∫–æ—Ä–∑–∏–Ω–∏" —è–∫—â–æ —ó—ó –Ω–µ–º–∞—î
            this.addBackToCartButton(form);
        }
    }

    // –î–æ–¥–∞–≤–∞–Ω–Ω—è –∫–Ω–æ–ø–∫–∏ –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –¥–æ –∫–æ—Ä–∑–∏–Ω–∏
    addBackToCartButton(form) {
        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ –≤–∂–µ —î –∫–Ω–æ–ø–∫–∞
        const existingBackBtn = form.querySelector('.back-to-cart-btn');
        if (existingBackBtn) return;

        // –ó–Ω–∞—Ö–æ–¥–∏–º–æ –∫–Ω–æ–ø–∫—É –≤—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏
        const submitBtn = form.querySelector('.order-btn');
        if (submitBtn) {
            // –°—Ç–≤–æ—Ä—é—î–º–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –∫–Ω–æ–ø–æ–∫
            const buttonsContainer = document.createElement('div');
            buttonsContainer.className = 'form-buttons';

            // –°—Ç–≤–æ—Ä—é—î–º–æ –∫–Ω–æ–ø–∫—É –Ω–∞–∑–∞–¥
            const backBtn = document.createElement('button');
            backBtn.type = 'button';
            backBtn.className = 'back-to-cart-btn';
            backBtn.innerHTML = '‚Üê –ù–∞–∑–∞–¥ –¥–æ –∫–æ—Ä–∑–∏–Ω–∏';
            backBtn.addEventListener('click', () => {
                this.showCartItems();
            });

            // –ü–µ—Ä–µ–Ω–æ—Å–∏–º–æ –∫–Ω–æ–ø–∫–∏ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
            buttonsContainer.appendChild(backBtn);
            buttonsContainer.appendChild(submitBtn.cloneNode(true));

            // –ó–∞–º—ñ–Ω—é—î–º–æ —Å—Ç–∞—Ä—É –∫–Ω–æ–ø–∫—É –Ω–æ–≤–∏–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–º
            submitBtn.parentNode.replaceChild(buttonsContainer, submitBtn);
        }
    }
}

// –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –∫–æ—Ä–∑–∏–Ω–∏ –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ —Å—Ç–æ—Ä—ñ–Ω–∫–∏
document.addEventListener('DOMContentLoaded', () => {
    window.shoppingCart = new ShoppingCart();

    // –Ü–Ω—Å—Ç—Ä—É–∫—Ü—ñ—ó –¥–ª—è –≤—ñ–¥–ª–∞–≥–æ–¥–∂–µ–Ω–Ω—è –≤ –∫–æ–Ω—Å–æ–ª—ñ
    console.log('%c=== –ö–û–†–ó–ò–ù–ê –Ü–ù–Ü–¶–Ü–ê–õ–Ü–ó–û–í–ê–ù–ê ===', 'color: green; font-weight: bold;');
    console.log('%cüõí –ù–æ–≤–∞ —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—å–Ω—ñ—Å—Ç—å: –î–≤–æ—Å—Ç–∞–Ω–æ–≤–∞ –∫–æ—Ä–∑–∏–Ω–∞!', 'color: blue; font-weight: bold;');
    console.log('–î–æ—Å—Ç—É–ø–Ω—ñ –∫–æ–º–∞–Ω–¥–∏ –¥–ª—è –≤—ñ–¥–ª–∞–≥–æ–¥–∂–µ–Ω–Ω—è:');
    console.log('- shoppingCart.debugCart() - –ø–æ–∫–∞–∑–∞—Ç–∏ —Å—Ç–∞–Ω –∫–æ—Ä–∑–∏–Ω–∏');
    console.log('- shoppingCart.clearDebugCart() - –æ—á–∏—Å—Ç–∏—Ç–∏ –∫–æ—Ä–∑–∏–Ω—É');
    console.log('- shoppingCart.addTestItems() - –¥–æ–¥–∞—Ç–∏ —Ç–µ—Å—Ç–æ–≤—ñ —Ç–æ–≤–∞—Ä–∏');
    console.log('- shoppingCart.forceRender() - üî• –ü–†–ò–ú–£–°–û–í–ò–ô –†–ï–ù–î–ï–†–ò–ù–ì');
    console.log('- shoppingCart.showCartItems() - üì¶ –ü–û–ö–ê–ó–ê–¢–ò –¢–û–í–ê–†–ò');
    console.log('- shoppingCart.showCheckoutForm() - üìã –ü–û–ö–ê–ó–ê–¢–ò –§–û–†–ú–£');
    console.log('- shoppingCart.openCart() - –≤—ñ–¥–∫—Ä–∏—Ç–∏ –∫–æ—Ä–∑–∏–Ω—É');
    console.log('- shoppingCart.closeCart() - –∑–∞–∫—Ä–∏—Ç–∏ –∫–æ—Ä–∑–∏–Ω—É');
});

// –°—Ç–∏–ª—ñ —Ç–µ–ø–µ—Ä –ø—ñ–¥–∫–ª—é—á–∞—é—Ç—å—Å—è —á–µ—Ä–µ–∑ –æ–∫—Ä–µ–º–∏–π CSS —Ñ–∞–π–ª cart-modal.css 